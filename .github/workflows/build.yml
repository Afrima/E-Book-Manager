name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  go:
    name: go test and build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/backend
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: install dep
        run: |
          go get -d -v
      - name: build
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o .
      - name: Archive production artifacts
        if: contains(github.ref, 'main')
        uses: actions/upload-artifact@v1
        with:
          name: backend
          path: backend
  yarn:
    name: cache node modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('src/frontend/yarn.lock') }}
      - name: Yarn install if cache is invalid
        if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: yarn install
  lint:
    name: lint frontend
    runs-on: ubuntu-latest
    needs: [yarn]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('src/frontend/yarn.lock') }}
      - name: lint
        working-directory: ./frontend
        run: npm run lint
  build:
    name: build frontend
    runs-on: ubuntu-latest
    needs: [yarn]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache-node-modules
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('src/frontend/yarn.lock') }}
      - name: build
        working-directory: ./frontend
        run: npm run build:prod
      - name: Archive production artifacts
        if: contains(github.ref, 'main')
        uses: actions/upload-artifact@v1
        with:
          name: frontend
          path: frontend/dist
